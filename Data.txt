Commits Detail!

#57 Se crea componente /Utils/UserProfileDropdownsx con el fin de organizar y reutilizar
la sesion del usuario.

#58 Se pasan las funcione y parametros de usuario al componente UserProfileDropdownsx con 
el fin de que el componente maneje lo relativo a inicio de sesion de usuario.

#59 Se agrega NavBar a BusinessPage, de este modo queda integrando en la pagina del negocio
el sistema de LogIn/Out. 

#60 Se agrega NavBar a Dashboard y se ajustan los estilos para encajar en las tres paginas
(Home - Dashboard - BusinessPage) con el mismo tamaño.

#60 Se arregla la navegacion del LogOut en Dashboard, para que cuando el usuario cierre sesion
pierda acceso al Dashboard y navegue automaticamente a Home.

G#62 Se agrega la fecha al encabezado del calendario y se anula la funcion de cirre de sesion
por inactividad.

G#63 Se agrega valor x/jugador en BusinessList, de este modo el cliente sabra el valor por 
persona del espacio a alquilar.

G#64 Modificacion en el array de horarios. Ahora la franja horaria la determina el owner cada 
vez que crea un espacio.

A#65 Se modifican los estilos del Dashboard. Ahora tiene un estilo mas visual y se remplazan los botones por iconos

G#66 Se ajusta formato de selector horario de apertura y cierre.

A#67 Se instala Toastify para el manejo de las notificaciones del Dashboard. Se añade la funcion showToast en handleAddSpace
para el manejo de las notificaciones del Dashboard.

G#68 Se agrega el dato "roof", mediante el cual se maneja el tipo de espacio "techada / aire libre"
en BusinessList esta agregado el dato pero comentado porque primero hay que ajustar los estilos

G#69 Se agrega la funcionalidad de gerarquias en los campos del componente Add. de esta manera los campos se 
completan en orden, lo cual es necesario para discriminar campos nuevos segun el deporte, por ejemplo en Padel 
se debe agregar "tipo de cerramiento: pared / blindex".

G#70 Se agrega a la lista de superficies que ofrece Add y List/EditSpace para seleccionar "Polvo de Ladrillo" y "Arena" 
y se guarda en la base de datos.

G#71 Modifique el UseEffect de Calendar.jsx:
 useEffect(() => {
    if (selectedSpace && date) {
      const fetchCalendarData = async () => {
        try {
          const formattedDate = date.toISOString().split('T')[0];..........

porque note que las fechas se sobreescribian cuando se consultaban desde Dashboard, lo que hacia que se 
pierdan todos los datos de los horarios. Aparentemente se Soluciono porque el error estaba en la implementacion
de setDoc.

G#72 Se agrega al componente Add seleccion "walls" en el caso de "sport = Paddle". Se guarda en la base de datos
como el resto de los atributos del espacio.

G#73 Se agrega a Dashboard, en la seccion "share-buttons", generados de QR para compartir la pagina del negocio (BusinessPage)
resta ajustar los estilos.

G#74 Se resuelve error del commit G#73, ya que en el proceso de agregar el QR me olvide de incluir la funcion de cambiar fondo
de BusinessPage. En este commit se incluyen ambas funciones generate QR y Imagechange.

G#75 Se agrega consulta por locasion cuando se inicia Home. este dato se guarda en la variable "userLocation" para utilizarla
luego, por ejemplo en el filtrado de espacios por ubicacion.

G#76 Se agrega navegacion a Home desde Dashboard, para esto fue necesario modificar los componentes NavBar y UserProfileDropdown.
en el desplegable icono Home provisorio.

A#77 Se añade estilos a la visualizacion de los espacios (SIN FINALIZAR). Se elimina algunos estilos repetidos.

A#78 Se añade estilos a la visualizacion del mapa,whatsapp y ubicacion.

G#79 Se agrega al componente NavBar la discriminacion cuando accede un user o un onwer, debido a que el user no tiene Dashboard.
por lo tanto se quita esta opcion de navegacion para los users.

G#80 se crea un .env para alojas URL, ApiKeys y resto de datos sensibles. En este commit ya se implementa en el env la URL del Home.
De esta manera el dia que reemplacemos el localHost por la definitiva solo cambiamos el valor de la variable en el env.
hay que tener en cuenta que es un .Env de desarrollo, para produccion hay que reemplazarlo por otro .env

G#81 Se agrega el dato expdate a firestore (creation date + 3 meses) con el fin de que cuando el owner inicia sesion, el sistema
interprete si esta vigente o vencido, para ser redigido o no a renovar su suscripcion a Book-It!  
*para esto se modifico la funcion "handleSubmit" del componente RegisterForm.jsx*

G#82 Se agrega la siguiente funcionalidad: cuando el owner inicia sesion, el sistema
interprete si esta vigente o vencido, para ser redigido o no a renovar su suscripcion a Book-It!  
*para esto se modifico la funcion "handleLogin" del componente LoginForm.jsx*

G#83 Se agrega el modal de comprar suscripcion (BuySuscription.jsx) el mismo se muestra cuando el owner quiere iniciar sesion
con una cuenta vencida. 
*para esto se crea el componente BuySuscription.jsx* y se modifica handleLogin para mostrarlo. 

G#84 Comienzo de integracion de MP como paserela de pago de Book It para manejar suscripcion de Owners.
Se crea la preferencia de pago y el componente BuySuscription.jsx y se integran a LoginForm.jsx.
credenciales en .env. 
se pasa a realizar test de pago, en caso de funcionar se sigue a la etapa de obtencion de datos de pagos.

G#85 Quitamos el archivo MP credencials.txt de github, lo includimos al ignore y eliminamos el commit para 
no hacer publica informacion sensible.

G#86 Tratando de commitear quitando en .env, el cual por algun motivo se sube a github.

G#87 Se agregan las credenciales de MP de 2do developer para poder realizar pagos de prueba. Para cambiar entre 
credenciales de los dos developer solo hay q comentar y descomentarlas desde el .env

G#88 Se agrega Back-url Succes, para pago exitoso. Cuenta con boton para volver a Home e iniciar sesion. 
se obtiene estado del pago y ID. Restaria obtener usuario con el fin de manejar los datos de firestore y 
completar el proceso de pago.

G#89 Logramos obtener toda la info necesaria para el manejo de pago aprobado, para luego utilizar en base
de datos (Payment-Id | Email | status)

G#90 Se añade la funcion de actualizacion de fecha de expiracion del Owner cuando realiza el pago con exito
desde MP (dato expdate de firestore).
Se descartan los cambios del commit G#91 por errores.

G#92 Se añade back-url para pagos "failure", cuando el pago no se realiza o no se lleva a cabo por algun error
se navega a la pantalla de Pago rechazado

G#93 Se lleva al BusinessPage el id de la base de datos del dueño del negocio, para luego hacer la consulta
de horarios en base a ese id. 

G#94 Se crea el componente Calendar/CalendarUser, calendario que utilizaremos en BusinessPage con el fin de utilizar
el user.id del dueño del necogio para las consultas y creacion de horarios en el calendario.
Dashboard sigue trabajando con el componente Calendar de siempre.

G#95 Se agrega la funcion consulta horario via whatsapp por parte del cliente desde el calendario de BusinessPage.